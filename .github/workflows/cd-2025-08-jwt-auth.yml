name: CD - 2025-08-jwt-auth

on:
  workflow_run:
    workflows: ["CI - Build & Push"]
    types: ["completed"]

concurrency:
  group: cd-jwt-auth
  cancel-in-progress: true

env:
  DEPLOY_DIR: /srv/docker/labs/2025-08-jwt-auth/deploy
  PROJECT_NAME: jwt-auth
  COMPOSE_FILE: docker-compose.yml
  SMOKE_BACKEND: ./scripts/smoke_backend.sh
  SMOKE_FRONTEND: ./scripts/smoke_frontend.sh

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 30m
          script_stop: true
          script: |
            bash -lc '
              set -Eeuo pipefail
              set -x

              trap "docker logout ghcr.io || true" EXIT

              docker --version
              docker compose version || true

              cd "${DEPLOY_DIR}" || (echo "deploy 디렉터리 없음: ${DEPLOY_DIR}"; exit 1)
              test -f "${COMPOSE_FILE}" || (echo "compose 파일 없음: ${COMPOSE_FILE}"; ls -la; exit 1)
              test -f .env || (echo ".env 없음 (REGISTRY/PROJECT_NAME 필요)"; exit 1)
              echo "===== .env 내용(민감값 제외) ====="
              grep -E "^(REGISTRY|PROJECT_NAME|IMAGE_PREFIX)=" .env || true

              echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

              export TAG=${{ github.event.workflow_run.head_sha }}

              docker compose -p "${PROJECT_NAME}" -f "${COMPOSE_FILE}" config > "/tmp/${PROJECT_NAME}.rendered.yml"
              head -n 60 "/tmp/${PROJECT_NAME}.rendered.yml" || true

              if ! grep -qE "image: .*:${TAG}" "/tmp/${PROJECT_NAME}.rendered.yml"; then
                echo "ERROR: compose 렌더 결과에 TAG(${TAG})가 반영되지 않았습니다."
                sed -n "1,200p" "/tmp/${PROJECT_NAME}.rendered.yml"
                exit 1
              fi

              for i in 1 2 3; do
                if docker compose -p "${PROJECT_NAME}" -f "${COMPOSE_FILE}" pull; then
                  break
                fi
                echo "pull retry $i"
                sleep $((i*i))
              done

              docker compose -p "${PROJECT_NAME}" -f "${COMPOSE_FILE}" up -d --remove-orphans

              docker compose -p "${PROJECT_NAME}" -f "${COMPOSE_FILE}" ps
              docker compose -p "${PROJECT_NAME}" -f "${COMPOSE_FILE}" ls || true

              test -x "${SMOKE_BACKEND}"  || (echo "smoke_backend.sh 없음/실행권한 없음"; exit 1)
              test -x "${SMOKE_FRONTEND}" || (echo "smoke_frontend.sh 없음/실행권한 없음"; exit 1)

              "${SMOKE_BACKEND}"
              "${SMOKE_FRONTEND}"
            '
