name: CD - Deploy 2025-08-jwt-auth

on:
  workflow_run:
    workflows: ["CI - Build & Push"]
    types: ["completed"]

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 30m
          script_stop: true
          script: |
            set -euo pipefail
            set -x  # 디버깅

            # 0) 환경 점검
            docker --version
            docker compose version || true

            cd /srv/docker/labs/2025-08-jwt-auth/deploy || (echo "deploy 디렉터리 없음"; exit 1)
            test -f docker-compose.yml || (echo "docker-compose.yml 없음"; ls -la; exit 1)
            test -f .env || (echo ".env 없음 (REGISTRY/PROJECT_NAME 필요)"; exit 1)
            echo "===== .env 내용(민감값 제외) ====="
            grep -E '^(REGISTRY|PROJECT_NAME)=' .env || true

            # 1) GHCR 로그인
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

            # 2) compose 유효성
            docker compose config >/tmp/compose.rendered.yml
            echo "===== compose render summary ====="
            head -n 60 /tmp/compose.rendered.yml || true

            # 3) 이미지 풀 (리트라이)
            for i in 1 2 3; do
              if docker compose pull; then break; fi
              echo "pull retry $i"; sleep 3
            done

            # 4) 기동
            TAG=${{ github.event.workflow_run.head_sha }} docker compose up -d --remove-orphans

            # 5) 상태 확인 (이름은 compose 서비스명과 동일)
            docker compose ps
            docker compose ls || true

            # 6) 스모크 (실행권한 보장)
            chmod +x ./scripts/smoke_backend.sh ./scripts/smoke_frontend.sh
            ./scripts/smoke_backend.sh
            ./scripts/smoke_frontend.sh

            docker logout ghcr.io
