services:
  jwt-frontend:
    image: ${REGISTRY}/${PROJECT_NAME}-frontend:${TAG}
    expose: ["80"]
    networks: ["proxy-net"]
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-net
      - "traefik.http.routers.jwtweb.rule=Host(`labs.cojoop.kro.kr`) && PathPrefix(`/jwt`) && !PathPrefix(`/jwt/api`)"
      - traefik.http.routers.jwtweb.entrypoints=websecure
      - traefik.http.routers.jwtweb.tls.certresolver=le
      - traefik.http.routers.jwtweb.priority=10
      - traefik.http.routers.jwtweb.service=jwtweb
      - traefik.http.services.jwtweb.loadbalancer.server.port=80
      - traefik.http.routers.jwtweb.middlewares=jwt-strip@docker,secure-headers@docker
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1/healthz"]
      interval: 10s
      timeout: 2s
      retries: 6
      start_period: 15s

  jwt-backend:
    image: ${REGISTRY}/${PROJECT_NAME}-backend:${TAG}
    expose: ["8080"]
    networks: ["proxy-net"]
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-net
      - "traefik.http.routers.jwtapi.rule=Host(`labs.cojoop.kro.kr`) && PathPrefix(`/jwt/api`) && !PathPrefix(`/jwt/api/actuator`)"
      - traefik.http.routers.jwtapi.entrypoints=websecure
      - traefik.http.routers.jwtapi.tls.certresolver=le
      - traefik.http.routers.jwtapi.priority=200
      - traefik.http.routers.jwtapi.service=jwtapi
      - traefik.http.services.jwtapi.loadbalancer.server.port=8080
      - traefik.http.routers.jwtapi.middlewares=jwt-strip@docker,secure-headers@docker
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8080/actuator/health"]
      interval: 10s
      timeout: 2s
      retries: 6
      start_period: 20s

networks:
  proxy-net:
    external: true
